name: 'Terraform'

on:
  workflow_dispatch:
    input:
      terraform_action:
        type: choice
        description: Select Terraform Action
        option:
        - apply
        - destroy
        required: true
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
    terraform:
      name: 'Terraform'
      env:
        #AWS Secrets
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}

      runs-on: ubuntu-latest
      environment: production
    
      steps:
        # Checkout the repository to the GitHub Actions runner
        - name: Checkout
          uses: actions/checkout@v3
        
        # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
        - name: Terraform Init
          uses: hashicorp/terraform-github-actions@master
          with:
            tf_actions_version: 0.15.0
            tf_actions_subcommand: 'init'
            tf_actions_working_dir: '.'
            tf_actions_comment: true
        
        - name: Terraform plan
          uses: hashicorp/terraform-github-actions@master
          with:
            tf_actions_version: 0.15.0
            tf_actions_subcommand: 'plan'
            tf_actions_working_dir: '.'
            tf_actions_comment: true
        
        - name: Terraform apply
          if: ${{ github.event.inputs.terraform_action =='apply' }}
          uses: hashicorp/terraform-github-actions@master
          with:
                tf_actions_version: 0.15.0
                tf_actions_subcommand: ${{ github.event.inputs.Terraform_action == 'apply' }}
                tf_actions_working_dir: '.'
                tf_actions_comment: true

        - name: Terraform destroy
          if: ${{ github.event.inputs.Terraform_action == 'destroy' }}
          uses: hashicorp/terraform-github-actions@master
          with:
                tf_actions_version: 0.15.0
                tf_actions_subcommand: ${{ github.event.inputs.Terraform_action =='destroy' }}
                tf_actions_working_dir: '.'
                tf_actions_comment: true                